/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package week_04;

import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.nio.file.Paths;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.MessageDigest;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.KeyAgreement;
import javax.crypto.SecretKey;
import javax.crypto.interfaces.DHPublicKey;
import javax.crypto.spec.DHParameterSpec;
import javax.crypto.spec.SecretKeySpec;

/**
 *
 * @author Administrator
 */
public class frm_Bob extends javax.swing.JFrame {

    /**
     * Creates new form frm_Bob
     */
    public frm_Bob() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txt_bob_key = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        btn_bob_key_generate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_alice_key = new javax.swing.JTextArea();
        btn_alice_key_display = new javax.swing.JButton();
        btn_make_secret_key = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_shared_secret = new javax.swing.JTextArea();
        btn_encrypt_secret_key = new javax.swing.JButton();
        btn_encrypt_decrypt = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_encrypt_shared_secret = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_bob_key.setColumns(20);
        txt_bob_key.setRows(5);
        jScrollPane1.setViewportView(txt_bob_key);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Encrypt Shared Secret");

        btn_bob_key_generate.setText("Bob's Key Generate");
        btn_bob_key_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bob_key_generateActionPerformed(evt);
            }
        });

        txt_alice_key.setColumns(20);
        txt_alice_key.setRows(5);
        jScrollPane2.setViewportView(txt_alice_key);

        btn_alice_key_display.setText("Alice's Key Display");
        btn_alice_key_display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alice_key_displayActionPerformed(evt);
            }
        });

        btn_make_secret_key.setText("Make Secret Key");
        btn_make_secret_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_make_secret_keyActionPerformed(evt);
            }
        });

        txt_shared_secret.setColumns(20);
        txt_shared_secret.setRows(5);
        jScrollPane3.setViewportView(txt_shared_secret);

        btn_encrypt_secret_key.setText("Encrypt Secret Key");
        btn_encrypt_secret_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_encrypt_secret_keyActionPerformed(evt);
            }
        });

        btn_encrypt_decrypt.setText("Run Encrypt/Decrypt Form");
        btn_encrypt_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_encrypt_decryptActionPerformed(evt);
            }
        });

        txt_encrypt_shared_secret.setColumns(20);
        txt_encrypt_shared_secret.setRows(5);
        jScrollPane4.setViewportView(txt_encrypt_shared_secret);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Shared Secret");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Alice's Key");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Bob Form (D-H)");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Bob's Key");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_alice_key_display))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_bob_key_generate))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_make_secret_key))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_encrypt_secret_key))
                    .addComponent(btn_encrypt_decrypt))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(212, 212, 212))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_bob_key_generate)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_alice_key_display)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(btn_make_secret_key, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(btn_encrypt_secret_key))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31)
                        .addComponent(btn_encrypt_decrypt))
                    .addComponent(jLabel4))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    KeyAgreement bobKeyAgree;
    PublicKey alicePubKey;
    SecretKey bobDesKey;
    Cipher bobCipher;
    
    private void btn_bob_key_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bob_key_generateActionPerformed
        try {
            boolean read = false;
            java.nio.file.Path dirPath = Paths.get("src/week_04");
            if (!java.nio.file.Files.exists(dirPath)) {
                java.nio.file.Files.createDirectories(dirPath);
            }
            while (!read) {
                try (FileInputStream fis = new FileInputStream(dirPath.resolve("A.pub").toFile())) {
                    read = true;
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }

            byte[] alicePubKeyEnc;
            try (FileInputStream fis = new FileInputStream(dirPath.resolve("A.pub").toFile())) {
                alicePubKeyEnc = new byte[fis.available()];
                fis.read(alicePubKeyEnc);
            }

            KeyFactory bobKeyFac = KeyFactory.getInstance("DH");
            X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(alicePubKeyEnc);
            alicePubKey = bobKeyFac.generatePublic(x509KeySpec);
            DHParameterSpec dhParamSpec = ((DHPublicKey) alicePubKey).getParams();
            KeyPairGenerator bobKpairGen = KeyPairGenerator.getInstance("DH");
            bobKpairGen.initialize(dhParamSpec);
            KeyPair bobKpair = bobKpairGen.generateKeyPair();

            bobKeyAgree = KeyAgreement.getInstance("DH");
            bobKeyAgree.init(bobKpair.getPrivate());

            byte[] bobPubKeyEnc = bobKpair.getPublic().getEncoded();
            try (FileOutputStream fos = new FileOutputStream(dirPath.resolve("B.pub").toFile())) {
                fos.write(bobPubKeyEnc);
            }
            txt_bob_key.setText(java.util.Base64.getEncoder().encodeToString(bobPubKeyEnc));

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_bob_key_generateActionPerformed

    private void btn_alice_key_displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alice_key_displayActionPerformed
        try {
            byte[] bkeyP;
            try (FileInputStream fis = new FileInputStream(Paths.get("src/week_04/A.pub").toFile())) {
                bkeyP = new byte[fis.available()];
                fis.read(bkeyP);
            }
            txt_alice_key.setText(bkeyP.toString()); 
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_alice_key_displayActionPerformed

    private void btn_make_secret_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_make_secret_keyActionPerformed
        try {
            bobKeyAgree.doPhase(alicePubKey, true);
            byte[] bobSharedSecret = bobKeyAgree.generateSecret();
            txt_shared_secret.setText(CryptoLong1242.toHexString(bobSharedSecret));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_make_secret_keyActionPerformed

    private void btn_encrypt_secret_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_encrypt_secret_keyActionPerformed
        try {
            bobKeyAgree.doPhase(alicePubKey, true); // Dòng này có thể không cần thiết nếu đã gọi trước
            byte[] sharedSecret = bobKeyAgree.generateSecret();
            txt_encrypt_shared_secret.setText(CryptoLong1242.toHexString(sharedSecret));

            MessageDigest sha256 = MessageDigest.getInstance("SHA-256");
            byte[] hashedKey = sha256.digest(sharedSecret);
            byte[] desKeyBytes = Arrays.copyOf(hashedKey, 8);
            SecretKeySpec desKeySpec = new SecretKeySpec(desKeyBytes, "DES");

            txt_encrypt_shared_secret.setText(Base64.getEncoder().encodeToString(desKeySpec.getEncoded()));
            String fileName = "src/week_04/B.txt";
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
                bw.write(Base64.getEncoder().encodeToString(desKeySpec.getEncoded()));
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_encrypt_secret_keyActionPerformed

    private void btn_encrypt_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_encrypt_decryptActionPerformed
        frm_DESCS des = new frm_DESCS();
        des.setVisible(true);
    }//GEN-LAST:event_btn_encrypt_decryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Bob().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alice_key_display;
    private javax.swing.JButton btn_bob_key_generate;
    private javax.swing.JButton btn_encrypt_decrypt;
    private javax.swing.JButton btn_encrypt_secret_key;
    private javax.swing.JButton btn_make_secret_key;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea txt_alice_key;
    private javax.swing.JTextArea txt_bob_key;
    private javax.swing.JTextArea txt_encrypt_shared_secret;
    private javax.swing.JTextArea txt_shared_secret;
    // End of variables declaration//GEN-END:variables
}
